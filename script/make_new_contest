#!/bin/bash

usage () {
    echo -e "Usage: $0 <DATE>"
    echo -e "    date format: YYYY-MM-DD"
    echo -e "    the year must be 2023"
}

create_makefile () {
    cat << EOF
TARGET = $1

.PHONY: \$(TARGET), clean

\$(TARGET):
	g++ -g -lm -std=c++17 -o \$(TARGET).exec \$(TARGET).cpp
	./\$(TARGET).exec < in.txt > out.txt
	@echo -e "\n=== Output ==="
	@cat out.txt
	@echo -e "\n=== Diff ==="
	@diff out.txt answer.txt || true
	@echo -e " "

clean:
	rm -rf \$(TARGET).exec out.txt
EOF
}

create_cpp_file () {
    cat << EOF
#include <bits/stdc++.h>

using namespace std;

using I = int64_t;

int main () {
    cout << "Hello, World!" << endl;
    return 0;
}
EOF
}

generate_all_files () {
    PROBLEM_IDS="A B C D E F G H I J"
    for ID in $PROBLEM_IDS
    do
        mkdir "$ID"
        cd "$ID"
        touch "in.txt"
        touch "answer.txt"
        echo -e "# [PROBLEM_NAME](PROBLEM_LINK)\n" > "README.md"
        create_makefile "$ID" > "Makefile"
        create_cpp_file > "$ID.cpp"
        cd ..
    done
}

DATE_REGEX="^2023-(0[1-9]|1[0-2])-([0-2][0-9]|3[01])$"


INPUT_DATE=$1
if [[ "$INPUT_DATE" =~ $DATE_REGEX ]]
then
    mkdir "$INPUT_DATE"
    cd "$INPUT_DATE"
    generate_all_files
    cd ..
else
    usage
fi


